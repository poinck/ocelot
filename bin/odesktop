#!/bin/bash
#
# odesktop is the main loop for the window-manager. It shows the current
# desktop number. window mode of the current desktop and graphs for all
# other desktops with windows.
#
#    ^   ^
#  +-------+
#  |  o_O  |
#  |  >.<  |__/
#  +-------+
#
# ocelot by AndrÃ© Klausnitzer, CC0

. ${OCELOT_PATH}bin/outils.sh
OCELOT_PATH=""
if [[ -f ~/.ocelotrc ]] ; then
    . ~/.ocelotrc
    if [[ -n "$ocelot_path" ]] ; then
        OCELOT_PATH="$ocelot_path"
    fi
    echo "odesktop.ocelot_path=$OCELOT_PATH"
fi

odfifo="/tmp/odesktop.fifo$OCELOT_INSTANCE"
[[ -p $odfifo ]] || mkfifo -m 600 "$odfifo"
${OCELOT_PATH}ocelot > "$odfifo" &

ofifo="/tmp/ocollector.fifo$OCELOT_INSTANCE"
while read -r reply ; do
    [[ -p $odfifo ]] || mkfifo -m 600 "$odfifo"
    # debug
    #echo "reply = $reply"

    # get window title
    desktopReply=${reply%%|*} # use first part of reply seperated by |

    # debug
    #echo "desktopReply = $desktopReply"

    # filter output to only what we want to match and parse
    [[ $desktopReply =~ ^(([[:digit:]]+:)+[[:digit:]]+ ?)+$ ]] && read -ra desktops <<< "$desktopReply" || continue
    desktopCount=0
    for desktop in "${desktops[@]}"; do
        # set values for
        # d - the desktop id
        # w - number of windows in that desktop
        # m - tiling layout/mode for that desktop
        # c - whether that desktop is the current (1) or not (0)
        # u - whether a window in that desktop has an urgent hint set (1) or not (0)
        IFS=':' read -r d w m c u <<< "$desktop"
        s=""

        # for the current desktop
        ((c)) && f=$cblue current_d=$(( d+1 )) && case $m in
            # name each layout/mode with a symbol
            0) i="T" ;;
            1) i="M" ;;
            2) i="B" ;;
            3) i="G" ;;
            4) i="F" ;;
        esac  || f=$cdarkblue

        # if the desktop has an urgent hint its color should be #ff0000
        ((u)) && f=$cyellow

        # for every desktop with windows
        if [[ "$w" -gt 0 ]] ; then
            desktopCount=$(( desktopCount+1 ))
            r="$r $(( w*12 )) $f "
        fi
    done

    if [[ "${current_d}" -lt 10 ]] ; then
        current_d="_${current_d}"
    fi

    desktop="desktop ^fg(#ffffff)_${current_d}^fg(#${cfont})${i} ${cdarkblue} 100 ${cblue}"
    desktops="desktops _ ${cdarkgrey} $r"
    echo "[DEBUG] $desktops"
    echo "[DEBUG] $desktop"
    [[ -p $ofifo ]] || mkfifo -m 600 "$ofifo"
    echo "$desktops" > "$ofifo"
    echo "$desktop" > "$ofifo"
    unset r
done < "$odfifo"
