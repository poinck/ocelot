#!/bin/bash
#
# olocker configures xautolock: start, disable, enable, notify
#
#    ^   ^
#  +-------+
#  |  o_O  |
#  |  >.<  |__/
#  +-------+
#
# ocelot by AndrÃ© Klausnitzer, CC0

source ${OCELOT_PATH}bin/outils.sh

LOCKSCREEN_TIMEOUT=10
if [[ -f ~/.ocelotrc ]] ; then
    . ~/.ocelotrc
    if [[ -n "$lockscreen_timeout" ]] ; then
        echo "[DEBUG] lockscreen_timeout = $lockscreen_timeout"
        LOCKSCREEN_TIMEOUT=$lockscreen_timeout
    fi
fi

ofifo="/tmp/ocollector.fifo$OCELOT_INSTANCE"

onolock=""
olocker=""
if [[ "$1" == "disable" ]] ; then
    xautolock -disable
    onolock="nolock ^fg(#${cdarkfont})L_^fg(#${cfont})OFF $cgrey 100 $corange"
elif [[ "$1" == "enable" ]] ; then
    xautolock -enable
    onolock="nolock ^fg(#${cdarkerfont})L_^fg(#${cdarkfont})ON $cdarkgrey"
elif [[ "$1" == "notify" ]] ; then
    for i in 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 ; do
        olocker="lock ^fg(#${cdarkfont})L_^fg(#${cfont})${i}s $cdarkgrey $(( 100*i/15 )) $corange"

        locker_graph=""
        for (( ii=1 ; ii<=i ; ii=ii+1 )) ; do
            locker_graph+=" 100 $cgrey"
            #echo "[DEBUG] ii=$ii"
        done

        echo "${olocker}${locker_graph}" > "$ofifo"
        sleep 1
    done
    olocker="lock ^fg(#${cdarkgrey})_ $cdarkgrey"
else
    # default: start xautolock
    xautolock -time $LOCKSCREEN_TIMEOUT -locker "olock" -notifier "olocker notify" -notify 16 &
fi

if [[ -n "$olocker" ]] ; then
    echo "$olocker" > "$ofifo"
    echo "[DEBUG] $olocker"
fi
if [[ -n "$onolock" ]] ; then
    echo "$onolock" > "$ofifo"
    echo "[DEBUG] $onolock"
fi
