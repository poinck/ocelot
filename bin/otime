#!/bin/bash
#
# otime provides day of the week, week number, time, day of month and month
# for the ocelot side-panel
#
#    ^   ^
#  +-------+
#  |  o_O  |
#  |  >.<  |__/
#  +-------+
#
# ocelot by AndrÃ© Klausnitzer, CC0

# TODO
# - try to call `date` only once per refresh

. ${OCELOT_PATH}bin/outils.sh

get_graph() {
    g16=$1 # 16th part of side-panel element width

    graph=""
    for (( ii=1 ; ii<=g16 ; ii=ii+1 )) ; do
        graph+=" 100 $cgrey"
        #echo "[DEBUG] ii=$ii"
    done

    echo -e "$graph"
}

get_otime() {
    day=$( date '+%A' )
    #echo "[DEBUG] day = '$day'"
    day=${day:0:3}
    #echo "[DEBUG] day = '$day'"
    day=${day^^*}
    #echo "[DEBUG] day = '$day'"

    hour=$( date '+%-H' )
    hour_graph=$( get_graph "$(( hour*16/24 ))" )
    hour_percent=$(( hour*100/24 ))
    hour_f="${hour}"
    if [[ "${hour}" -lt 10 ]] ; then
        hour_f="0${hour}"
    fi

    minute=$( date '+%-M' )
    minute_f="${minute}"
    if [[ "${minute}" -lt 10 ]] ; then
        minute_f="0${minute}"
    fi

    day_in_month=$( date '+%-d' )
    day_in_month_f=${day_in_month}
    if [[ "${day_in_month}" -lt 10 ]] ; then
        day_in_month_f="_${day_in_month}"
    fi
    month=$( date '+%b' )
    month=${month:0:3}
    #echo "[DEBUG] month = '$month'"
    month=${month^^*}
    #echo "[DEBUG] month = '$month'"

    year=$( date '+%Y' )
    year2=${year:0:2}
    year4=${year:2:2}
    week="$( date '+%-V' )"
    if [[ "${week}" -lt 10 ]] ; then
        week="_${week}"
    fi

    otime_time="time _^fg(#${cfont})${hour_f}^fg(#${cdarkfont})${minute_f} ${cdarkgrey} ${hour_percent} $cdarkblue ${hour_graph}"
    otime_weekday="weekday _^fg(#${cfont})${week}^fg(#${cdarkfont})${day} $cdarkgrey"
    otime_date="date _^fg(#${cfont})${day_in_month_f}^fg(#${cdarkfont})${month} $cdarkgrey"
    otime_year="year _^fg(#${cdarkfont})${year2}^fg(#${cdarkfont})${year4} $cdarkgrey"
}

ofifo="/tmp/ocollector.fifo$OCELOT_INSTANCE"
while true ; do
    get_otime

    #echo "[DEBUG] $otime_time"
    #echo "[DEBUG] $otime_weekday"
    #echo "[DEBUG] $otime_date"
    #echo "[DEBUG] $otime_year"
    [[ -p $ofifo ]] || mkfifo -m 600 "$ofifo"
    echo "$otime_time" > "$ofifo"
    echo "$otime_weekday" > "$ofifo"
    echo "$otime_date" > "$ofifo"
    echo "$otime_year" > "$ofifo"

    second=$( date '+%-S' )
    #echo "[DEBUG] second=$second"
    delay=$(( 60-second ))
    #echo "[DEBUG] delay=${delay}"

    sleep "$delay"
done
